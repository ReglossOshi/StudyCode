스프링 주요 특징

IoC 컨테이너에 빈으로 등록이 되어 있어야 의존성 주입을 할 수 있다.



POJO 기반의 구성
객체 간의 관계를 구성할 수 있는 특징
별도의 API사용 없이 관계를 구성하는 
POJO(Plain Old Java Object)
- 자바 코드만으로 객체를 구성하는 방식을 스프링에서 사용가능하다.

의존성 주입(DI)과 스프링
의존성(Dependency)이란 하나의 객체가 다른 객체 없이 제대로 된 역할
을 할 수 없는 것을 의미한다.

주입(Injection)은 외부에서 밀어 넣는 것을 의미한다.
필요한 객체를 얻기 위해서 주체가 능동적인지 수동적인지에 대한 문제인다.

'어떤 객체가 필요한 객체를 외부에서 밀어 넣는다'
주입 받으면 그것이 어떤 객체인지 신경 쓸 필요가 없게 된다.
어떤 객체를 받든 역할은 변하지 않는다.

A -> ApplicationContext ->B
A <- ApplicationContext <-B

ApplicationContext가 관리하는 객체들을 Bean이라는 용어로 부르고
빈과 빈 사이의 의존관계를 처리하는 방식으로 XML설정, 어노테이션 설정
, Java 설정 방식을 이용할 수 있다.

AOP의 지원
개발자가 비즈니스 로직에만 집중할 수 있게 한다.

반복적인 코드 제거하고 핵심 코드만 집중할 수 있게 한다.

횡단 관심사(cross-concern)-비즈니스 로직은 아니지만 필요한 부분
횡단 관심사를 모듈로 분리하는 프로그램

AOP를 AspectJ의 문법을 통해서 작성

트랜잭션의 지원
하나의 업무가 여러 작업으로 이루어지는 경우의 트랜잭션 처리
이런 상황을 어노테이션이나 XML이 처리해준다.

